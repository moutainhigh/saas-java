<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.zenmind</groupId>
	<artifactId>storeTaskMS</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>storeTaskMS</name>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.2.RELEASE</version>
	</parent>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>Dalston.RELEASE</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<docker.repostory>registry.cn-hangzhou.aliyuncs.com</docker.repostory>
		<docker.registry.name>zenmind</docker.registry.name>
		<docker.registry.imageName>storetaskms</docker.registry.imageName>
		<docker.registry.imageTag>latest</docker.registry.imageTag>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.zenmind</groupId>
			<artifactId>storeMQ</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.zenmind</groupId>
			<artifactId>zmDaoRabbit</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.zenmind</groupId>
			<artifactId>zmBase</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-eureka</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream-binder-rabbit</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
	</dependencies>

	<distributionManagement>
		<repository>
			<id>releases</id>
			<name>Nexus Release Repository</name>
			<url>http://${nexus.address}/nexus/content/repositories/releases/</url>
		</repository>
		<snapshotRepository>
			<id>snapshots</id>
			<name>Nexus Snapshot Repository</name>
			<url>http://${nexus.address}/nexus/content/repositories/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

	<build>
		<resources><!-- 使用@@站位符，输出Dockerfile至docker文件夹 -->
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*</include>
				</includes>
				<targetPath>../classes</targetPath>
			</resource>
			<resource>
				<directory>src/main/docker</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*</include>
				</includes>
				<targetPath>../docker</targetPath>
			</resource>
		</resources>
		
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>2.6</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<!-- 打包只包含公司项目的组件 -->
				<configuration>
	                <layout>ZIP</layout>
	                <includes>
	                	<include>
	                		<groupId>com.zenmind</groupId>
							<artifactId>zmBase</artifactId>
	                	</include>
	                	<include>
	                		<groupId>com.zenmind</groupId>
							<artifactId>storeMQ</artifactId>
	                	</include>
	                	<include>
	                		<groupId>com.zenmind</groupId>
							<artifactId>zmDaoRabbit</artifactId>
	                	</include>
	                </includes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>install</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<plugin>  
			    <groupId>org.apache.maven.plugins</groupId>  
			    <artifactId>maven-dependency-plugin</artifactId>  
			    <executions>  
			        <execution>  
			            <phase>package</phase>  
			            <goals>
							<goal>copy-dependencies</goal>
						</goals>
			        </execution>  
			    </executions>  
			    <configuration>
			    	<outputDirectory>${project.build.directory}/libs</outputDirectory>
			    	<excludeGroupIds>com.zenmind</excludeGroupIds>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.4.13</version>
				<executions>
					<execution>
						<phase>docker</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- 私有仓库配置，需要settings.xml文件配合serverId对应的服务地址 -->
					<serverId>docker-aliyun</serverId>
					<registryUrl>registry.cn-hangzhou.aliyuncs.com</registryUrl>
					<!-- <forceTags>true</forceTags> -->
					<!--install阶段也上传，否则只有deploy阶段上传 -->
					<pushImage>false</pushImage>
					<dockerDirectory>target/docker</dockerDirectory>
					<imageName>
						${docker.repostory}/${docker.registry.name}/${docker.registry.imageName}
					</imageName>
					<forceTags>true</forceTags>
					<imageTags>
						<!--docker的tag为项目版本号、latest -->
						<imageTag>${docker.registry.imageTag}</imageTag>
					</imageTags>
					<resources>
						<rescource><!-- 将打包文件放入dockerDirectory指定的位置 -->
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</rescource>
					</resources>
				</configuration>
			</plugin>
		</plugins>
	</build>


</project>